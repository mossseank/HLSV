-- MIT License - Copyright (c) 2019-2020 Sean Moss [moss.seank@gmail.com]
-- This file is subject to the terms and conditions of the MIT License, the text of which can be found in the 'LICENSE'
-- file at the root of this repository, or online at <https://opensource.org/licenses/MIT>.

-- This is the premake project definition file for the HLSV project.


-- Project workspace
workspace "HLSV"
	-- Shared settings
	language "C++"
	cppdialect "C++17"
	location "build"
	configurations { "Static", "Shared" }
	platforms { "x64" }
	architecture "x86_64"
	flags { "MultiProcessorCompile" }

	-- Output directories
	filter { "configurations:Static" }
		targetdir "build/bin/Static"
	filter { "configurations:Shared" }
		targetdir "build/bin/Shared"
	filter {}

	-- Release settings
	runtime "Release"
	symbols "Off"
	optimize "Speed"

	-- Compiler/Platform settings
	filter { "system:windows" }
		systemversion "latest"
		disablewarnings { "4099", "4251", "4275" }
		staticruntime "off"
		defines { "_CRT_SECURE_NO_WARNINGS" }
	filter { "toolset:gcc or clang" }
		buildoptions { "-fpermissive", "-fvisibility=hidden", "-fPIC" }
	filter {}

	-- Library paths
	filter { "system:windows" }
		libdirs { "./libs/msvc" }
	filter { "system:linux" }
		libdirs { "./libs/linux" }
	filter { "system:macosx" }
		libdirs { "./libs/macosx" }
	filter {}


-- Base compiler and reflection library
project "hlsv"
	-- Project settings
	includedirs { "include", "include/antlr" }
	defines { "_HLSV_BUILD", "ANTLR4CPP_STATIC" }
	targetname "hlsv"

	-- Project output types
	filter { "configurations:Static" }
		kind "StaticLib"
		defines { "HLSV_STATIC" }
	filter { "configurations:Shared" }
		kind "SharedLib"
	filter {}

	-- Libraries
	links { "antlr4-runtime-static" }
	filter { "system:not windows", "configurations:Static" }
		-- This is required because premake does not follow static dependencies, so the link to the antlr runtime
		--    is ignored by gcc and clang. This is a manual linking of static hlsv with the runtime.
		postbuildcommands {
			"cd %{cfg.buildtarget.directory} && "..
			"mkdir tmp && cd tmp && "..
			"mv ../libhlsv.a . && ar -x libhlsv.a && "..
			"cp ../../../../../libs/%{cfg.system}/libantlr4-runtime-static.a . && "..
			"ar -x libantlr4-runtime-static.a && ar -rcs ../libhlsv.a *.o && "..
			"cd .. && rm -rf tmp/"
		}
	filter {}

	-- Project files
	files {
		"include/hlsv/**.hpp", -- Public API C++ Headers
		"include/hlsv/**.h",   -- Public API C Headers
		"hlsv/**.hpp",         -- Private C++ Headers
		"hlsv/**.h",           -- Private C Headers
		"hlsv/**.inl",         -- Template Implementations
		"hlsv/**.cpp",         -- Sources
		"generated/**.h",      -- Generated Grammar Headers
		"generated/**.cpp"     -- Generated Grammar Sources
	}


-- Command-line compiler
project "hlsvc"
	-- Project settings
	includedirs { "include" }
	defines { }
	targetname "hlsvc"
	kind "ConsoleApp"
	dependson { "hlsv" }

	-- Required for static linking
	filter { "configurations:Static" }
		defines { "HLSV_STATIC" }
		links { "hlsv" }
	filter {}

	-- Project files
	files {
		"hlsvc/**.hpp", -- Private Headers
		"hlsvc/**.inl", -- Template Implementations
		"hlsvc/**.cpp"  -- Sources
	}
